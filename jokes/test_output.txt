    warning: Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available or is yet to be defined)
    │
 16 │       |> Jokes.ApiController.create_joke()
    │                              ~
    │
    └─ test/support/fixtures/api_controller_fixtures.ex:16:30: Jokes.ApiControllerFixtures.joke_fixture/1

....    warning: Jokes.ApiController.change_joke/1 is undefined (module Jokes.ApiController is not available or is yet to be defined)
    │
 55 │       assert %Ecto.Changeset{} = ApiController.change_joke(joke)
    │                                                ~
    │
    └─ test/jokes/api_controller_test.exs:55:48: Jokes.ApiControllerTest."test jokes change_joke/1 returns a joke changeset"/1

    warning: Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available or is yet to be defined)
    │
 25 │       assert {:ok, %Joke{} = joke} = ApiController.create_joke(valid_attrs)
    │                                                    ~
    │
    └─ test/jokes/api_controller_test.exs:25:52: Jokes.ApiControllerTest."test jokes create_joke/1 with valid data creates a joke"/1
    └─ test/jokes/api_controller_test.exs:30:58: Jokes.ApiControllerTest."test jokes create_joke/1 with invalid data returns error changeset"/1

warning: no route path for JokesWeb.Router matches "/jokes/#{joke}"
  test/jokes_web/controllers/joke_controller_test.exs:75: JokesWeb.JokeControllerTest."test delete joke deletes chosen joke"/1

    warning: Jokes.ApiController.delete_joke/1 is undefined (module Jokes.ApiController is not available or is yet to be defined)
    │
 49 │       assert {:ok, %Joke{}} = ApiController.delete_joke(joke)
    │                                             ~
    │
    └─ test/jokes/api_controller_test.exs:49:45: Jokes.ApiControllerTest."test jokes delete_joke/1 deletes the joke"/1

warning: no route path for JokesWeb.Router matches "/jokes"
  test/jokes_web/controllers/joke_controller_test.exs:72: JokesWeb.JokeControllerTest."test delete joke deletes chosen joke"/1

warning: no route path for JokesWeb.Router matches "/jokes/#{joke}"
  test/jokes_web/controllers/joke_controller_test.exs:71: JokesWeb.JokeControllerTest."test delete joke deletes chosen joke"/1

warning: no route path for JokesWeb.Router matches "/jokes/#{joke}"
  test/jokes_web/controllers/joke_controller_test.exs:62: JokesWeb.JokeControllerTest."test update joke renders errors when data is invalid"/1

warning: no route path for JokesWeb.Router matches "/jokes/#{joke}"
  test/jokes_web/controllers/joke_controller_test.exs:57: JokesWeb.JokeControllerTest."test update joke redirects when data is valid"/1

warning: no route path for JokesWeb.Router matches "/jokes/#{joke}"
  test/jokes_web/controllers/joke_controller_test.exs:55: JokesWeb.JokeControllerTest."test update joke redirects when data is valid"/1

warning: no route path for JokesWeb.Router matches "/jokes/#{joke}"
  test/jokes_web/controllers/joke_controller_test.exs:54: JokesWeb.JokeControllerTest."test update joke redirects when data is valid"/1

warning: no route path for JokesWeb.Router matches "/jokes/#{joke}/edit"
  test/jokes_web/controllers/joke_controller_test.exs:45: JokesWeb.JokeControllerTest."test edit joke renders form for editing chosen joke"/1

    warning: Jokes.ApiController.get_joke!/1 is undefined (module Jokes.ApiController is not available or is yet to be defined)
    │
 19 │       assert ApiController.get_joke!(joke.id) == joke
    │                            ~
    │
    └─ test/jokes/api_controller_test.exs:19:28: Jokes.ApiControllerTest."test jokes get_joke!/1 returns the joke with given id"/1
    └─ test/jokes/api_controller_test.exs:44:36: Jokes.ApiControllerTest."test jokes update_joke/2 with invalid data returns error changeset"/1
    └─ test/jokes/api_controller_test.exs:50:61: Jokes.ApiControllerTest."test jokes delete_joke/1 deletes the joke"/1

warning: no route path for JokesWeb.Router matches "/jokes"
  test/jokes_web/controllers/joke_controller_test.exs:36: JokesWeb.JokeControllerTest."test create joke renders errors when data is invalid"/1

warning: no route path for JokesWeb.Router matches "/jokes/#{id}"
  test/jokes_web/controllers/joke_controller_test.exs:31: JokesWeb.JokeControllerTest."test create joke redirects to show when data is valid"/1

warning: no route path for JokesWeb.Router matches "/jokes/#{id}"
  test/jokes_web/controllers/joke_controller_test.exs:29: JokesWeb.JokeControllerTest."test create joke redirects to show when data is valid"/1

warning: no route path for JokesWeb.Router matches "/jokes"
  test/jokes_web/controllers/joke_controller_test.exs:26: JokesWeb.JokeControllerTest."test create joke redirects to show when data is valid"/1

    warning: Jokes.ApiController.list_jokes/0 is undefined (module Jokes.ApiController is not available or is yet to be defined)
    │
 14 │       assert ApiController.list_jokes() == [joke]
    │                            ~
    │
    └─ test/jokes/api_controller_test.exs:14:28: Jokes.ApiControllerTest."test jokes list_jokes/0 returns all jokes"/1

warning: no route path for JokesWeb.Router matches "/jokes/new"
  test/jokes_web/controllers/joke_controller_test.exs:19: JokesWeb.JokeControllerTest."test new joke renders form"/1

warning: no route path for JokesWeb.Router matches "/jokes"
  test/jokes_web/controllers/joke_controller_test.exs:12: JokesWeb.JokeControllerTest."test index lists all jokes"/1

    warning: Jokes.ApiController.update_joke/2 is undefined (module Jokes.ApiController is not available or is yet to be defined)
    │
 37 │       assert {:ok, %Joke{} = joke} = ApiController.update_joke(joke, update_attrs)
    │                                                    ~
    │
    └─ test/jokes/api_controller_test.exs:37:52: Jokes.ApiControllerTest."test jokes update_joke/2 with valid data updates the joke"/1
    └─ test/jokes/api_controller_test.exs:43:58: Jokes.ApiControllerTest."test jokes update_joke/2 with invalid data returns error changeset"/1



  1) test jokes create_joke/1 with invalid data returns error changeset (Jokes.ApiControllerTest)
     test/jokes/api_controller_test.exs:29
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     code: assert {:error, %Ecto.Changeset{}} = ApiController.create_joke(@invalid_attrs)
     stacktrace:
       Jokes.ApiController.create_joke(%{response: nil})
       test/jokes/api_controller_test.exs:30: (test)



  2) test jokes change_joke/1 returns a joke changeset (Jokes.ApiControllerTest)
     test/jokes/api_controller_test.exs:53
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     code: joke = joke_fixture()
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes/api_controller_test.exs:54: (test)



  3) test jokes update_joke/2 with invalid data returns error changeset (Jokes.ApiControllerTest)
     test/jokes/api_controller_test.exs:41
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     code: joke = joke_fixture()
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes/api_controller_test.exs:42: (test)



  4) test jokes create_joke/1 with valid data creates a joke (Jokes.ApiControllerTest)
     test/jokes/api_controller_test.exs:22
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     code: assert {:ok, %Joke{} = joke} = ApiController.create_joke(valid_attrs)
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       test/jokes/api_controller_test.exs:25: (test)



  5) test jokes get_joke!/1 returns the joke with given id (Jokes.ApiControllerTest)
     test/jokes/api_controller_test.exs:17
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     code: joke = joke_fixture()
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes/api_controller_test.exs:18: (test)



  6) test jokes update_joke/2 with valid data updates the joke (Jokes.ApiControllerTest)
     test/jokes/api_controller_test.exs:33
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     code: joke = joke_fixture()
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes/api_controller_test.exs:34: (test)



  7) test jokes list_jokes/0 returns all jokes (Jokes.ApiControllerTest)
     test/jokes/api_controller_test.exs:12
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     code: joke = joke_fixture()
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes/api_controller_test.exs:13: (test)



  8) test jokes delete_joke/1 deletes the joke (Jokes.ApiControllerTest)
     test/jokes/api_controller_test.exs:47
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     code: joke = joke_fixture()
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes/api_controller_test.exs:48: (test)



  9) test create joke renders errors when data is invalid (JokesWeb.JokeControllerTest)
     test/jokes_web/controllers/joke_controller_test.exs:35
     ** (RuntimeError) expected response with status 200, got: 404, with body:
     "Not Found"
     code: assert html_response(conn, 200) =~ "New Joke"
     stacktrace:
       (phoenix 1.7.7) lib/phoenix/test/conn_test.ex:373: Phoenix.ConnTest.response/2
       (phoenix 1.7.7) lib/phoenix/test/conn_test.ex:387: Phoenix.ConnTest.html_response/2
       test/jokes_web/controllers/joke_controller_test.exs:37: (test)



 10) test delete joke deletes chosen joke (JokesWeb.JokeControllerTest)
     test/jokes_web/controllers/joke_controller_test.exs:70
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes_web/controllers/joke_controller_test.exs:81: JokesWeb.JokeControllerTest.create_joke/1
       JokesWeb.JokeControllerTest.__ex_unit_describe_5/1



 11) test update joke redirects when data is valid (JokesWeb.JokeControllerTest)
     test/jokes_web/controllers/joke_controller_test.exs:53
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes_web/controllers/joke_controller_test.exs:81: JokesWeb.JokeControllerTest.create_joke/1
       JokesWeb.JokeControllerTest.__ex_unit_describe_4/1



 12) test create joke redirects to show when data is valid (JokesWeb.JokeControllerTest)
     test/jokes_web/controllers/joke_controller_test.exs:25
     ** (RuntimeError) expected redirection with status 302, got: 404
     code: assert %{id: id} = redirected_params(conn)
     stacktrace:
       (phoenix 1.7.7) lib/phoenix/test/conn_test.ex:454: Phoenix.ConnTest.redirected_to/2
       (phoenix 1.7.7) lib/phoenix/test/conn_test.ex:591: Phoenix.ConnTest.redirected_params/2
       test/jokes_web/controllers/joke_controller_test.exs:28: (test)



 13) test new joke renders form (JokesWeb.JokeControllerTest)
     test/jokes_web/controllers/joke_controller_test.exs:18
     ** (RuntimeError) expected response with status 200, got: 404, with body:
     "Not Found"
     code: assert html_response(conn, 200) =~ "New Joke"
     stacktrace:
       (phoenix 1.7.7) lib/phoenix/test/conn_test.ex:373: Phoenix.ConnTest.response/2
       (phoenix 1.7.7) lib/phoenix/test/conn_test.ex:387: Phoenix.ConnTest.html_response/2
       test/jokes_web/controllers/joke_controller_test.exs:20: (test)



 14) test edit joke renders form for editing chosen joke (JokesWeb.JokeControllerTest)
     test/jokes_web/controllers/joke_controller_test.exs:44
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes_web/controllers/joke_controller_test.exs:81: JokesWeb.JokeControllerTest.create_joke/1
       JokesWeb.JokeControllerTest.__ex_unit_describe_3/1



 15) test index lists all jokes (JokesWeb.JokeControllerTest)
     test/jokes_web/controllers/joke_controller_test.exs:11
     ** (RuntimeError) expected response with status 200, got: 404, with body:
     "Not Found"
     code: assert html_response(conn, 200) =~ "Listing Jokes"
     stacktrace:
       (phoenix 1.7.7) lib/phoenix/test/conn_test.ex:373: Phoenix.ConnTest.response/2
       (phoenix 1.7.7) lib/phoenix/test/conn_test.ex:387: Phoenix.ConnTest.html_response/2
       test/jokes_web/controllers/joke_controller_test.exs:13: (test)



 16) test update joke renders errors when data is invalid (JokesWeb.JokeControllerTest)
     test/jokes_web/controllers/joke_controller_test.exs:61
     ** (UndefinedFunctionError) function Jokes.ApiController.create_joke/1 is undefined (module Jokes.ApiController is not available)
     stacktrace:
       Jokes.ApiController.create_joke(%{response: "some response"})
       (jokes 0.1.0) test/support/fixtures/api_controller_fixtures.ex:16: Jokes.ApiControllerFixtures.joke_fixture/1
       test/jokes_web/controllers/joke_controller_test.exs:81: JokesWeb.JokeControllerTest.create_joke/1
       JokesWeb.JokeControllerTest.__ex_unit_describe_4/1



 17) test GET / (JokesWeb.PageControllerTest)
     test/jokes_web/controllers/page_controller_test.exs:4
     Assertion with =~ failed
     code:  assert html_response(conn, 200) =~ "Peace of mind from prototype to production"
     left:  "<!DOCTYPE html>\n<html lang=\"en\" class=\"[scrollbar-gutter:stable]\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta name=\"csrf-token\" content=\"OnsjN1lmV3c_FygYAQlFAAABTl8xJQICLOdq768BxuPq1breUB-0Vlgx\">\n    <title data-suffix=\" · Phoenix Framework\">\nJokes\n     · Phoenix Framework</title>\n    <link phx-track-static rel=\"stylesheet\" href=\"/assets/app.css\">\n    <script defer phx-track-static type=\"text/javascript\" src=\"/assets/app.js\">\n    </script>\n  </head>\n  <body class=\"bg-white antialiased\">\n<div data-phx-main data-phx-session=\"SFMyNTY.g2gDaAJhBXQAAAAIZAACaWRtAAAAFHBoeC1GX3VYQ1A4bkZURXFiZ0dFZAAMbGl2ZV9zZXNzaW9uaAJkAAdkZWZhdWx0bggAcKZFRVaT-xdkAApwYXJlbnRfcGlkZAADbmlsZAAIcm9vdF9waWRkAANuaWxkAAlyb290X3ZpZXdkABhFbGl4aXIuSm9rZXNXZWIuSm9rZUxpdmVkAAZyb3V0ZXJkABZFbGl4aXIuSm9rZXNXZWIuUm91dGVyZAAHc2Vzc2lvbnQAAAAAZAAEdmlld2QAGEVsaXhpci5Kb2tlc1dlYi5Kb2tlTGl2ZW4GAFMxOl2SAWIAAVGA.db-8zcn8i03ktY1oLBlK_BDugmJu7hQRjSgHqPUVqXE\" data-phx-static=\"SFMyNTY.g2gDaAJhBXQAAAADZAAKYXNzaWduX25ld2pkAAVmbGFzaHQAAAAAZAACaWRtAAAAFHBoeC1GX3VYQ1A4bkZURXFiZ0dFbgYAaTE6XZIBYgABUYA.jxAHnflF_-CoP8C57GGFpErDQkAwRxH9gqNuamKf2xg\" id=\"phx-F_uXCP8nFTEqbgGE\"><!-- lib/your_project_web/live/joke_live.html.leex -->\n\n<div class=\"joke-container\">\n  <h1 class=\"joke-header\">How 'bout a nice dad joke to brighten your day?</h1>\n  <div class=\"centered-text\">\nA book just fell on my head. I only have my shelf to blame.\n  </div>\n  <div class=\"refresh-button\">\n    <button phx-click=\"fetch_joke\">New Joke!</button>\n  </div>\n</div>\n</div>\n  </body>\n</html>"
     right: "Peace of mind from prototype to production"
     stacktrace:
       test/jokes_web/controllers/page_controller_test.exs:6: (test)


Finished in 1.5 seconds (0.2s async, 1.2s sync)
21 tests, 17 failures

Randomized with seed 291986
